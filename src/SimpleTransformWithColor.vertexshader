#version 120


// Input vertex data, different for all executions of this shader.
attribute vec3 vertexPosition_modelspace;
attribute vec3 inputColor;
attribute vec2 texCoord;
attribute vec3 vertexNormal_modelspace;

// Values that stay constant for the whole mesh.
uniform mat4 VP;
uniform mat4 ModelMatrix;


varying vec3 fragmentColor;

varying vec2 TexCoord;
varying vec3 normal_worldspace;
varying vec3 position_worldspace;
void main(){

	// Output position of the vertex, in clip space : MVP * position
	//this is not the optimal solution, but we will work with this for now.
	gl_Position =  VP * ModelMatrix * vec4(vertexPosition_modelspace,1);
	position_worldspace = vec3(ModelMatrix * vec4(vertexPosition_modelspace,1));
	normal_worldspace = normalize(vec3(ModelMatrix * vec4(vertexNormal_modelspace,0)));
	fragmentColor =  inputColor;
	TexCoord = texCoord;
}

